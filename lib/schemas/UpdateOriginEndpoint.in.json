{
    "type": "object",
    "properties": {
        "id": {
            "required": true,
            "type": "string"
        },
        "Version": {
            "required": true,
            "type": "string"
        },
        "requestBody": {
            "description": "Configuration parameters used to update an existing OriginEndpoint.",
            "properties": {
                "CmafPackage": {
                    "description": "A Common Media Application Format (CMAF) packaging configuration.",
                    "properties": {
                        "Encryption": {
                            "description": "A Common Media Application Format (CMAF) encryption configuration.",
                            "properties": {
                                "KeyRotationIntervalSeconds": {
                                    "description": "Time (in seconds) between each encryption key rotation.",
                                    "type": "integer"
                                },
                                "SpekeKeyProvider": {
                                    "description": "A configuration for accessing an external Secure Packager and Encoder Key Exchange (SPEKE) service that will provide encryption keys.",
                                    "properties": {
                                        "CertificateArn": {
                                            "description": "An Amazon Resource Name (ARN) of a Certificate Manager certificate\nthat MediaPackage will use for enforcing secure end-to-end data\ntransfer with the key provider service.\n",
                                            "type": "string"
                                        },
                                        "ResourceId": {
                                            "description": "The resource ID to include in key requests.",
                                            "type": "string"
                                        },
                                        "RoleArn": {
                                            "description": "An Amazon Resource Name (ARN) of an IAM role that AWS Elemental\nMediaPackage will assume when accessing the key provider service.\n",
                                            "type": "string"
                                        },
                                        "SystemIds": {
                                            "description": "The system IDs to include in key requests.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "Url": {
                                            "description": "The URL of the external key provider service.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Url",
                                        "ResourceId",
                                        "RoleArn",
                                        "SystemIds"
                                    ],
                                    "type": "object"
                                }
                            },
                            "required": [
                                "SpekeKeyProvider"
                            ],
                            "type": "object"
                        },
                        "HlsManifests": {
                            "description": "A list of HLS manifest configurations",
                            "items": {
                                "description": "A HTTP Live Streaming (HLS) manifest configuration.",
                                "properties": {
                                    "AdMarkers": {
                                        "description": "This setting controls how ad markers are included in the packaged OriginEndpoint.\n\"NONE\" will omit all SCTE-35 ad markers from the output.\n\"PASSTHROUGH\" causes the manifest to contain a copy of the SCTE-35 ad\nmarkers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest.\n\"SCTE35_ENHANCED\" generates ad markers and blackout tags based on SCTE-35\nmessages in the input source.\n",
                                        "enum": [
                                            "NONE",
                                            "SCTE35_ENHANCED",
                                            "PASSTHROUGH"
                                        ],
                                        "type": "string"
                                    },
                                    "Id": {
                                        "description": "The ID of the manifest. The ID must be unique within the OriginEndpoint and it cannot be changed after it is created.",
                                        "type": "string"
                                    },
                                    "IncludeIframeOnlyStream": {
                                        "description": "When enabled, an I-Frame only stream will be included in the output.",
                                        "type": "boolean"
                                    },
                                    "ManifestName": {
                                        "description": "An optional short string appended to the end of the OriginEndpoint URL. If not specified, defaults to the manifestName for the OriginEndpoint.",
                                        "type": "string"
                                    },
                                    "PlaylistType": {
                                        "description": "The HTTP Live Streaming (HLS) playlist type.\nWhen either \"EVENT\" or \"VOD\" is specified, a corresponding EXT-X-PLAYLIST-TYPE\nentry will be included in the media playlist.\n",
                                        "enum": [
                                            "NONE",
                                            "EVENT",
                                            "VOD"
                                        ],
                                        "type": "string"
                                    },
                                    "PlaylistWindowSeconds": {
                                        "description": "Time window (in seconds) contained in each parent manifest.",
                                        "type": "integer"
                                    },
                                    "ProgramDateTimeIntervalSeconds": {
                                        "description": "The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag\ninserted into manifests. Additionally, when an interval is specified\nID3Timed Metadata messages will be generated every 5 seconds using the\ningest time of the content.\nIf the interval is not specified, or set to 0, then\nno EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no\nID3Timed Metadata messages will be generated. Note that irrespective\nof this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input,\nit will be passed through to HLS output.\n",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "Id"
                                ],
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "SegmentDurationSeconds": {
                            "description": "Duration (in seconds) of each segment. Actual segments will be\nrounded to the nearest multiple of the source segment duration.\n",
                            "type": "integer"
                        },
                        "SegmentPrefix": {
                            "description": "An optional custom string that is prepended to the name of each segment. If not specified, it defaults to the ChannelId.",
                            "type": "string"
                        },
                        "StreamSelection": {
                            "description": "A StreamSelection configuration.",
                            "properties": {
                                "MaxVideoBitsPerSecond": {
                                    "description": "The maximum video bitrate (bps) to include in output.",
                                    "type": "integer"
                                },
                                "MinVideoBitsPerSecond": {
                                    "description": "The minimum video bitrate (bps) to include in output.",
                                    "type": "integer"
                                },
                                "StreamOrder": {
                                    "description": "A directive that determines the order of streams in the output.",
                                    "enum": [
                                        "ORIGINAL",
                                        "VIDEO_BITRATE_ASCENDING",
                                        "VIDEO_BITRATE_DESCENDING"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "DashPackage": {
                    "description": "A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.",
                    "properties": {
                        "Encryption": {
                            "description": "A Dynamic Adaptive Streaming over HTTP (DASH) encryption configuration.",
                            "properties": {
                                "KeyRotationIntervalSeconds": {
                                    "description": "Time (in seconds) between each encryption key rotation.",
                                    "type": "integer"
                                },
                                "SpekeKeyProvider": {
                                    "description": "A configuration for accessing an external Secure Packager and Encoder Key Exchange (SPEKE) service that will provide encryption keys.",
                                    "properties": {
                                        "CertificateArn": {
                                            "description": "An Amazon Resource Name (ARN) of a Certificate Manager certificate\nthat MediaPackage will use for enforcing secure end-to-end data\ntransfer with the key provider service.\n",
                                            "type": "string"
                                        },
                                        "ResourceId": {
                                            "description": "The resource ID to include in key requests.",
                                            "type": "string"
                                        },
                                        "RoleArn": {
                                            "description": "An Amazon Resource Name (ARN) of an IAM role that AWS Elemental\nMediaPackage will assume when accessing the key provider service.\n",
                                            "type": "string"
                                        },
                                        "SystemIds": {
                                            "description": "The system IDs to include in key requests.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "Url": {
                                            "description": "The URL of the external key provider service.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Url",
                                        "ResourceId",
                                        "RoleArn",
                                        "SystemIds"
                                    ],
                                    "type": "object"
                                }
                            },
                            "required": [
                                "SpekeKeyProvider"
                            ],
                            "type": "object"
                        },
                        "ManifestLayout": {
                            "description": "Determines the position of some tags in the Media Presentation Description (MPD).  When set to FULL, elements like SegmentTemplate and ContentProtection are included in each Representation.  When set to COMPACT, duplicate elements are combined and presented at the AdaptationSet level.",
                            "enum": [
                                "FULL",
                                "COMPACT"
                            ],
                            "type": "string"
                        },
                        "ManifestWindowSeconds": {
                            "description": "Time window (in seconds) contained in each manifest.",
                            "type": "integer"
                        },
                        "MinBufferTimeSeconds": {
                            "description": "Minimum duration (in seconds) that a player will buffer media before starting the presentation.",
                            "type": "integer"
                        },
                        "MinUpdatePeriodSeconds": {
                            "description": "Minimum duration (in seconds) between potential changes to the Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD).",
                            "type": "integer"
                        },
                        "PeriodTriggers": {
                            "description": "A list of triggers that controls when the outgoing Dynamic Adaptive Streaming over HTTP (DASH)\nMedia Presentation Description (MPD) will be partitioned into multiple periods. If empty, the content will not\nbe partitioned into more than one period. If the list contains \"ADS\", new periods will be created where\nthe Channel source contains SCTE-35 ad markers.\n",
                            "items": {
                                "enum": [
                                    "ADS"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "Profile": {
                            "description": "The Dynamic Adaptive Streaming over HTTP (DASH) profile type.  When set to \"HBBTV_1_5\", HbbTV 1.5 compliant output is enabled.",
                            "enum": [
                                "NONE",
                                "HBBTV_1_5"
                            ],
                            "type": "string"
                        },
                        "SegmentDurationSeconds": {
                            "description": "Duration (in seconds) of each segment. Actual segments will be\nrounded to the nearest multiple of the source segment duration.\n",
                            "type": "integer"
                        },
                        "SegmentTemplateFormat": {
                            "description": "Determines the type of SegmentTimeline included in the Media Presentation Description (MPD).  When set to NUMBER_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Number$ media URLs.  When set to TIME_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Time$ media URLs.",
                            "enum": [
                                "NUMBER_WITH_TIMELINE",
                                "TIME_WITH_TIMELINE"
                            ],
                            "type": "string"
                        },
                        "StreamSelection": {
                            "description": "A StreamSelection configuration.",
                            "properties": {
                                "MaxVideoBitsPerSecond": {
                                    "description": "The maximum video bitrate (bps) to include in output.",
                                    "type": "integer"
                                },
                                "MinVideoBitsPerSecond": {
                                    "description": "The minimum video bitrate (bps) to include in output.",
                                    "type": "integer"
                                },
                                "StreamOrder": {
                                    "description": "A directive that determines the order of streams in the output.",
                                    "enum": [
                                        "ORIGINAL",
                                        "VIDEO_BITRATE_ASCENDING",
                                        "VIDEO_BITRATE_DESCENDING"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "SuggestedPresentationDelaySeconds": {
                            "description": "Duration (in seconds) to delay live content before presentation.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "Description": {
                    "description": "A short text description of the OriginEndpoint.",
                    "type": "string"
                },
                "HlsPackage": {
                    "description": "An HTTP Live Streaming (HLS) packaging configuration.",
                    "properties": {
                        "AdMarkers": {
                            "description": "This setting controls how ad markers are included in the packaged OriginEndpoint.\n\"NONE\" will omit all SCTE-35 ad markers from the output.\n\"PASSTHROUGH\" causes the manifest to contain a copy of the SCTE-35 ad\nmarkers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest.\n\"SCTE35_ENHANCED\" generates ad markers and blackout tags based on SCTE-35\nmessages in the input source.\n",
                            "enum": [
                                "NONE",
                                "SCTE35_ENHANCED",
                                "PASSTHROUGH"
                            ],
                            "type": "string"
                        },
                        "Encryption": {
                            "description": "An HTTP Live Streaming (HLS) encryption configuration.",
                            "properties": {
                                "ConstantInitializationVector": {
                                    "description": "A constant initialization vector for encryption (optional).\nWhen not specified the initialization vector will be periodically rotated.\n",
                                    "type": "string"
                                },
                                "EncryptionMethod": {
                                    "description": "The encryption method to use.",
                                    "enum": [
                                        "AES_128",
                                        "SAMPLE_AES"
                                    ],
                                    "type": "string"
                                },
                                "KeyRotationIntervalSeconds": {
                                    "description": "Interval (in seconds) between each encryption key rotation.",
                                    "type": "integer"
                                },
                                "RepeatExtXKey": {
                                    "description": "When enabled, the EXT-X-KEY tag will be repeated in output manifests.",
                                    "type": "boolean"
                                },
                                "SpekeKeyProvider": {
                                    "description": "A configuration for accessing an external Secure Packager and Encoder Key Exchange (SPEKE) service that will provide encryption keys.",
                                    "properties": {
                                        "CertificateArn": {
                                            "description": "An Amazon Resource Name (ARN) of a Certificate Manager certificate\nthat MediaPackage will use for enforcing secure end-to-end data\ntransfer with the key provider service.\n",
                                            "type": "string"
                                        },
                                        "ResourceId": {
                                            "description": "The resource ID to include in key requests.",
                                            "type": "string"
                                        },
                                        "RoleArn": {
                                            "description": "An Amazon Resource Name (ARN) of an IAM role that AWS Elemental\nMediaPackage will assume when accessing the key provider service.\n",
                                            "type": "string"
                                        },
                                        "SystemIds": {
                                            "description": "The system IDs to include in key requests.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "Url": {
                                            "description": "The URL of the external key provider service.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Url",
                                        "ResourceId",
                                        "RoleArn",
                                        "SystemIds"
                                    ],
                                    "type": "object"
                                }
                            },
                            "required": [
                                "SpekeKeyProvider"
                            ],
                            "type": "object"
                        },
                        "IncludeIframeOnlyStream": {
                            "description": "When enabled, an I-Frame only stream will be included in the output.",
                            "type": "boolean"
                        },
                        "PlaylistType": {
                            "description": "The HTTP Live Streaming (HLS) playlist type.\nWhen either \"EVENT\" or \"VOD\" is specified, a corresponding EXT-X-PLAYLIST-TYPE\nentry will be included in the media playlist.\n",
                            "enum": [
                                "NONE",
                                "EVENT",
                                "VOD"
                            ],
                            "type": "string"
                        },
                        "PlaylistWindowSeconds": {
                            "description": "Time window (in seconds) contained in each parent manifest.",
                            "type": "integer"
                        },
                        "ProgramDateTimeIntervalSeconds": {
                            "description": "The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag\ninserted into manifests. Additionally, when an interval is specified\nID3Timed Metadata messages will be generated every 5 seconds using the\ningest time of the content.\nIf the interval is not specified, or set to 0, then\nno EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no\nID3Timed Metadata messages will be generated. Note that irrespective\nof this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input,\nit will be passed through to HLS output.\n",
                            "type": "integer"
                        },
                        "SegmentDurationSeconds": {
                            "description": "Duration (in seconds) of each fragment. Actual fragments will be\nrounded to the nearest multiple of the source fragment duration.\n",
                            "type": "integer"
                        },
                        "StreamSelection": {
                            "description": "A StreamSelection configuration.",
                            "properties": {
                                "MaxVideoBitsPerSecond": {
                                    "description": "The maximum video bitrate (bps) to include in output.",
                                    "type": "integer"
                                },
                                "MinVideoBitsPerSecond": {
                                    "description": "The minimum video bitrate (bps) to include in output.",
                                    "type": "integer"
                                },
                                "StreamOrder": {
                                    "description": "A directive that determines the order of streams in the output.",
                                    "enum": [
                                        "ORIGINAL",
                                        "VIDEO_BITRATE_ASCENDING",
                                        "VIDEO_BITRATE_DESCENDING"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "UseAudioRenditionGroup": {
                            "description": "When enabled, audio streams will be placed in rendition groups in the output.",
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                },
                "ManifestName": {
                    "description": "A short string that will be appended to the end of the Endpoint URL.",
                    "type": "string"
                },
                "MssPackage": {
                    "description": "A Microsoft Smooth Streaming (MSS) packaging configuration.",
                    "properties": {
                        "Encryption": {
                            "description": "A Microsoft Smooth Streaming (MSS) encryption configuration.",
                            "properties": {
                                "SpekeKeyProvider": {
                                    "description": "A configuration for accessing an external Secure Packager and Encoder Key Exchange (SPEKE) service that will provide encryption keys.",
                                    "properties": {
                                        "CertificateArn": {
                                            "description": "An Amazon Resource Name (ARN) of a Certificate Manager certificate\nthat MediaPackage will use for enforcing secure end-to-end data\ntransfer with the key provider service.\n",
                                            "type": "string"
                                        },
                                        "ResourceId": {
                                            "description": "The resource ID to include in key requests.",
                                            "type": "string"
                                        },
                                        "RoleArn": {
                                            "description": "An Amazon Resource Name (ARN) of an IAM role that AWS Elemental\nMediaPackage will assume when accessing the key provider service.\n",
                                            "type": "string"
                                        },
                                        "SystemIds": {
                                            "description": "The system IDs to include in key requests.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "Url": {
                                            "description": "The URL of the external key provider service.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Url",
                                        "ResourceId",
                                        "RoleArn",
                                        "SystemIds"
                                    ],
                                    "type": "object"
                                }
                            },
                            "required": [
                                "SpekeKeyProvider"
                            ],
                            "type": "object"
                        },
                        "ManifestWindowSeconds": {
                            "description": "The time window (in seconds) contained in each manifest.",
                            "type": "integer"
                        },
                        "SegmentDurationSeconds": {
                            "description": "The duration (in seconds) of each segment.",
                            "type": "integer"
                        },
                        "StreamSelection": {
                            "description": "A StreamSelection configuration.",
                            "properties": {
                                "MaxVideoBitsPerSecond": {
                                    "description": "The maximum video bitrate (bps) to include in output.",
                                    "type": "integer"
                                },
                                "MinVideoBitsPerSecond": {
                                    "description": "The minimum video bitrate (bps) to include in output.",
                                    "type": "integer"
                                },
                                "StreamOrder": {
                                    "description": "A directive that determines the order of streams in the output.",
                                    "enum": [
                                        "ORIGINAL",
                                        "VIDEO_BITRATE_ASCENDING",
                                        "VIDEO_BITRATE_DESCENDING"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "StartoverWindowSeconds": {
                    "description": "Maximum duration (in seconds) of content to retain for startover playback.\nIf not specified, startover playback will be disabled for the OriginEndpoint.\n",
                    "type": "integer"
                },
                "TimeDelaySeconds": {
                    "description": "Amount of delay (in seconds) to enforce on the playback of live content.\nIf not specified, there will be no time delay in effect for the OriginEndpoint.\n",
                    "type": "integer"
                },
                "Whitelist": {
                    "description": "A list of source IP CIDR blocks that will be allowed to access the OriginEndpoint.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "X_Amz_Content_Sha256": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Date": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Algorithm": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Credential": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Security_Token": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Signature": {
            "required": false,
            "type": "string"
        },
        "X_Amz_SignedHeaders": {
            "required": false,
            "type": "string"
        }
    }
}